    Token          		 Lexeme                             		    Line#	  Column#

    VOID           		 void                               		        1	        1
    IDENTIFIER     		 countChars                         		        1	        6
    (              		 (                                  		        1	       16
    CHAR           		 char                               		        1	       17
    *              		 *                                  		        1	       21
    IDENTIFIER     		 str                                		        1	       23
    )              		 )                                  		        1	       26
    {              		 {                                  		        1	       27
    INT            		 int                                		        2	        5
    IDENTIFIER     		 len                                		        2	        9
    =              		 =                                  		        2	       13
    IDENTIFIER     		 strlen                             		        2	       15
    (              		 (                                  		        2	       21
    IDENTIFIER     		 str                                		        2	       22
    )              		 )                                  		        2	       25
    ;              		 ;                                  		        2	       26
    INT            		 int                                		        3	        5
    IDENTIFIER     		 count                              		        3	        9
    [              		 [                                  		        3	       14
    CONSTANT       		 26                                 		        3	       15
    ]              		 ]                                  		        3	       17
    ;              		 ;                                  		        3	       18
    FOR            		 for                                		        4	        5
    (              		 (                                  		        4	        8
    INT            		 int                                		        4	        9
    IDENTIFIER     		 i                                  		        4	       13
    =              		 =                                  		        4	       15
    CONSTANT       		 0                                  		        4	       17
    ;              		 ;                                  		        4	       18
    IDENTIFIER     		 i                                  		        4	       19
    <              		 <                                  		        4	       20
    CONSTANT       		 26                                 		        4	       21
    ;              		 ;                                  		        4	       23
    IDENTIFIER     		 i                                  		        4	       24
    INC_OP         		 ++                                 		        4	       25
    )              		 )                                  		        4	       27
    {              		 {                                  		        4	       28
    IDENTIFIER     		 count                              		        5	        9
    [              		 [                                  		        5	       14
    IDENTIFIER     		 i                                  		        5	       15
    ]              		 ]                                  		        5	       16
    =              		 =                                  		        5	       18
    CONSTANT       		 0                                  		        5	       20
    ;              		 ;                                  		        5	       21
    }              		 }                                  		        6	        5
    FOR            		 for                                		        7	        5
    (              		 (                                  		        7	        8
    INT            		 int                                		        7	        9
    IDENTIFIER     		 i                                  		        7	       13
    =              		 =                                  		        7	       15
    CONSTANT       		 0                                  		        7	       17
    ;              		 ;                                  		        7	       18
    IDENTIFIER     		 i                                  		        7	       19
    <              		 <                                  		        7	       20
    IDENTIFIER     		 len                                		        7	       21
    ;              		 ;                                  		        7	       24
    IDENTIFIER     		 i                                  		        7	       25
    INC_OP         		 ++                                 		        7	       26
    )              		 )                                  		        7	       28
    {              		 {                                  		        7	       29
    INT            		 int                                		        8	        9
    IDENTIFIER     		 x                                  		        8	       13
    =              		 =                                  		        8	       15
    IDENTIFIER     		 str                                		        8	       17
    [              		 [                                  		        8	       20
    IDENTIFIER     		 i                                  		        8	       21
    ]              		 ]                                  		        8	       22
    -              		 -                                  		        8	       24
    CONSTANT       		 'a'                                		        8	       26
    ;              		 ;                                  		        8	       29
    IDENTIFIER     		 count                              		        9	        9
    [              		 [                                  		        9	       14
    IDENTIFIER     		 x                                  		        9	       15
    ]              		 ]                                  		        9	       16
    INC_OP         		 ++                                 		        9	       17
    ;              		 ;                                  		        9	       19
    }              		 }                                  		       10	        5
    FOR            		 for                                		       11	        5
    (              		 (                                  		       11	        8
    INT            		 int                                		       11	        9
    IDENTIFIER     		 i                                  		       11	       13
    =              		 =                                  		       11	       15
    CONSTANT       		 0                                  		       11	       17
    ;              		 ;                                  		       11	       18
    IDENTIFIER     		 i                                  		       11	       19
    <              		 <                                  		       11	       20
    CONSTANT       		 26                                 		       11	       21
    ;              		 ;                                  		       11	       23
    IDENTIFIER     		 i                                  		       11	       24
    INC_OP         		 ++                                 		       11	       25
    )              		 )                                  		       11	       27
    {              		 {                                  		       11	       28
    IDENTIFIER     		 printf                             		       12	        9
    (              		 (                                  		       12	       15
    STRING_LITERAL 		 "Number of %c in str = %d\n"       		       12	       39
    ,              		 ,                                  		       12	       44
    CONSTANT       		 'a'                                		       12	       45
    +              		 +                                  		       12	       49
    IDENTIFIER     		 i                                  		       12	       51
    ,              		 ,                                  		       12	       52
    IDENTIFIER     		 count                              		       12	       54
    [              		 [                                  		       12	       59
    IDENTIFIER     		 i                                  		       12	       60
    ]              		 ]                                  		       12	       61
    )              		 )                                  		       12	       62
    ;              		 ;                                  		       12	       63
    }              		 }                                  		       13	        5
    RETURN         		 return                             		       14	        5
    ;              		 ;                                  		       14	       11
    }              		 }                                  		       15	        1
    INT            		 int                                		       16	        1
    IDENTIFIER     		 main                               		       16	        5
    (              		 (                                  		       16	        9
    )              		 )                                  		       16	       10
    {              		 {                                  		       16	       11
    FLOAT          		 float                              		       17	        5
    IDENTIFIER     		 x                                  		       17	       11
    =              		 =                                  		       17	       13
    CONSTANT       		 12.6                               		       17	       15
    ;              		 ;                                  		       17	       19
    INT            		 int                                		       18	        5
    IDENTIFIER     		 y                                  		       18	        9
    =              		 =                                  		       18	       11
    CONSTANT       		 34                                 		       18	       13
    ;              		 ;                                  		       18	       15
    FLOAT          		 float                              		       19	        5
    IDENTIFIER     		 z                                  		       19	       11
    =              		 =                                  		       19	       13
    IDENTIFIER     		 pow                                		       19	       15
    (              		 (                                  		       19	       18
    IDENTIFIER     		 x                                  		       19	       19
    ,              		 ,                                  		       19	       20
    IDENTIFIER     		 y                                  		       19	       21
    )              		 )                                  		       19	       22
    ;              		 ;                                  		       19	       23
    INT            		 int                                		       20	        5
    IDENTIFIER     		 a                                  		       20	        9
    =              		 =                                  		       20	       11
    IDENTIFIER     		 ceil                               		       20	       13
    (              		 (                                  		       20	       17
    IDENTIFIER     		 sqrt                               		       20	       18
    (              		 (                                  		       20	       22
    IDENTIFIER     		 x                                  		       20	       23
    )              		 )                                  		       20	       24
    )              		 )                                  		       20	       25
    ,              		 ,                                  		       20	       26
    IDENTIFIER     		 b                                  		       20	       28
    =              		 =                                  		       20	       30
    IDENTIFIER     		 floor                              		       20	       32
    (              		 (                                  		       20	       37
    IDENTIFIER     		 x                                  		       20	       38
    )              		 )                                  		       20	       39
    ;              		 ;                                  		       20	       40
    FLOAT          		 float                              		       21	        5
    IDENTIFIER     		 c                                  		       21	       11
    =              		 =                                  		       21	       13
    IDENTIFIER     		 log                                		       21	       15
    (              		 (                                  		       21	       18
    IDENTIFIER     		 fabs                               		       21	       19
    (              		 (                                  		       21	       23
    -              		 -                                  		       21	       24
    IDENTIFIER     		 x                                  		       21	       25
    )              		 )                                  		       21	       26
    )              		 )                                  		       21	       27
    ;              		 ;                                  		       21	       28
    CHAR           		 char                               		       23	        5
    IDENTIFIER     		 str1                               		       23	       10
    [              		 [                                  		       23	       14
    CONSTANT       		 50                                 		       23	       15
    ]              		 ]                                  		       23	       17
    =              		 =                                  		       23	       19
    STRING_LITERAL 		 "This is a test case\0"            		       23	       37
    ;              		 ;                                  		       23	       44
    CHAR           		 char                               		       24	        5
    IDENTIFIER     		 str2                               		       24	       10
    [              		 [                                  		       24	       14
    CONSTANT       		 50                                 		       24	       15
    ]              		 ]                                  		       24	       17
    =              		 =                                  		       24	       19
    STRING_LITERAL 		 " for compiler project.\0"         		       24	       36
    ;              		 ;                                  		       24	       47
    IDENTIFIER     		 strcat                             		       25	        5
    (              		 (                                  		       25	       11
    IDENTIFIER     		 str1                               		       25	       12
    ,              		 ,                                  		       25	       16
    IDENTIFIER     		 str2                               		       25	       18
    )              		 )                                  		       25	       22
    ;              		 ;                                  		       25	       23
    IDENTIFIER     		 strcpy                             		       26	        5
    (              		 (                                  		       26	       11
    IDENTIFIER     		 str2                               		       26	       12
    ,              		 ,                                  		       26	       16
    IDENTIFIER     		 str1                               		       26	       18
    )              		 )                                  		       26	       22
    ;              		 ;                                  		       26	       23
    INT            		 int                                		       27	        5
    IDENTIFIER     		 len                                		       27	        9
    =              		 =                                  		       27	       13
    IDENTIFIER     		 strlen                             		       27	       15
    (              		 (                                  		       27	       21
    IDENTIFIER     		 str2                               		       27	       22
    )              		 )                                  		       27	       26
    ;              		 ;                                  		       27	       27
    CHAR           		 char                               		       29	        5
    IDENTIFIER     		 st                                 		       29	       10
    [              		 [                                  		       29	       12
    ]              		 ]                                  		       29	       13
    =              		 =                                  		       29	       15
    STRING_LITERAL 		 "our team name is codagami"        		       29	       35
    ;              		 ;                                  		       29	       44
    CHAR           		 char                               		       30	        5
    IDENTIFIER     		 ch                                 		       30	       10
    =              		 =                                  		       30	       13
    CONSTANT       		 'm'                                		       30	       15
    ;              		 ;                                  		       30	       18
    CHAR           		 char                               		       31	        5
    *              		 *                                  		       31	        9
    IDENTIFIER     		 p                                  		       31	       11
    =              		 =                                  		       31	       13
    IDENTIFIER     		 strrchr                            		       31	       15
    (              		 (                                  		       31	       22
    IDENTIFIER     		 st                                 		       31	       23
    ,              		 ,                                  		       31	       25
    IDENTIFIER     		 ch                                 		       31	       27
    )              		 )                                  		       31	       29
    ;              		 ;                                  		       31	       30
    IDENTIFIER     		 printf                             		       32	        5
    (              		 (                                  		       32	       11
    STRING_LITERAL 		 "String after last %c is : %s \n"  		       32	       42
    ,              		 ,                                  		       32	       45
    IDENTIFIER     		 ch                                 		       32	       47
    ,              		 ,                                  		       32	       49
    IDENTIFIER     		 p                                  		       32	       51
    )              		 )                                  		       32	       52
    ;              		 ;                                  		       32	       53
    IDENTIFIER     		 countChars                         		       33	        5
    (              		 (                                  		       33	       15
    IDENTIFIER     		 st                                 		       33	       16
    )              		 )                                  		       33	       18
    ;              		 ;                                  		       33	       19
    RETURN         		 return                             		       34	        5
    CONSTANT       		 0                                  		       34	       12
    ;              		 ;                                  		       34	       13
    }              		 }                                  		       35	        1
