    Token          		 Lexeme                             		    Line#	  Column#

    STRUCT         		 struct                             		        2	        1
    IDENTIFIER     		 node                               		        2	        8
    {              		 {                                  		        2	       12
    INT            		 int                                		        3	        5
    IDENTIFIER     		 val                                		        3	        9
    ;              		 ;                                  		        3	       12
    STRUCT         		 struct                             		        4	        5
    IDENTIFIER     		 node                               		        4	       12
    *              		 *                                  		        4	       16
    IDENTIFIER     		 right                              		        4	       18
    ;              		 ;                                  		        4	       23
    STRUCT         		 struct                             		        5	        5
    IDENTIFIER     		 node                               		        5	       12
    *              		 *                                  		        5	       16
    IDENTIFIER     		 left                               		        5	       18
    ;              		 ;                                  		        5	       22
    }              		 }                                  		        6	        1
    ;              		 ;                                  		        6	        2
    VOID           		 void                               		        8	        1
    IDENTIFIER     		 trav                               		        8	        6
    (              		 (                                  		        8	       10
    STRUCT         		 struct                             		        8	       11
    IDENTIFIER     		 node                               		        8	       18
    *              		 *                                  		        8	       22
    IDENTIFIER     		 root                               		        8	       24
    )              		 )                                  		        8	       28
    {              		 {                                  		        8	       29
    IF             		 if                                 		        9	        5
    (              		 (                                  		        9	        7
    !              		 !                                  		        9	        8
    IDENTIFIER     		 root                               		        9	        9
    )              		 )                                  		        9	       13
    RETURN         		 return                             		        9	       15
    ;              		 ;                                  		        9	       21
    IDENTIFIER     		 printf                             		       10	        5
    (              		 (                                  		       10	       11
    STRING_LITERAL 		 "%d\n"                             		       10	       12
    ,              		 ,                                  		       10	       18
    IDENTIFIER     		 root                               		       10	       19
    PTR_OP         		 ->                                 		       10	       23
    IDENTIFIER     		 val                                		       10	       25
    )              		 )                                  		       10	       28
    ;              		 ;                                  		       10	       29
    IDENTIFIER     		 trav                               		       11	        5
    (              		 (                                  		       11	        9
    IDENTIFIER     		 root                               		       11	       10
    PTR_OP         		 ->                                 		       11	       14
    IDENTIFIER     		 left                               		       11	       16
    )              		 )                                  		       11	       20
    ;              		 ;                                  		       11	       21
    IDENTIFIER     		 trav                               		       12	        5
    (              		 (                                  		       12	        9
    IDENTIFIER     		 root                               		       12	       10
    PTR_OP         		 ->                                 		       12	       14
    IDENTIFIER     		 right                              		       12	       16
    )              		 )                                  		       12	       21
    ;              		 ;                                  		       12	       22
    }              		 }                                  		       13	        1
    INT            		 int                                		       15	        1
    IDENTIFIER     		 main                               		       15	        5
    (              		 (                                  		       15	        9
    )              		 )                                  		       15	       10
    {              		 {                                  		       15	       11
    STRUCT         		 struct                             		       16	        5
    IDENTIFIER     		 node                               		       16	       12
    *              		 *                                  		       16	       16
    IDENTIFIER     		 root                               		       16	       18
    ;              		 ;                                  		       16	       22
    STRUCT         		 struct                             		       17	        5
    IDENTIFIER     		 node                               		       17	       12
    *              		 *                                  		       17	       16
    IDENTIFIER     		 lchild                             		       17	       18
    ;              		 ;                                  		       17	       24
    STRUCT         		 struct                             		       18	        5
    IDENTIFIER     		 node                               		       18	       12
    *              		 *                                  		       18	       16
    IDENTIFIER     		 rchild                             		       18	       18
    ;              		 ;                                  		       18	       24
    IDENTIFIER     		 root                               		       19	        5
    PTR_OP         		 ->                                 		       19	        9
    IDENTIFIER     		 val                                		       19	       11
    =              		 =                                  		       19	       15
    CONSTANT       		 0                                  		       19	       17
    ;              		 ;                                  		       19	       18
    IDENTIFIER     		 lchild                             		       20	        5
    PTR_OP         		 ->                                 		       20	       11
    IDENTIFIER     		 val                                		       20	       13
    =              		 =                                  		       20	       16
    CONSTANT       		 1                                  		       20	       17
    ;              		 ;                                  		       20	       18
    IDENTIFIER     		 rchild                             		       21	        5
    PTR_OP         		 ->                                 		       21	       11
    IDENTIFIER     		 val                                		       21	       13
    =              		 =                                  		       21	       16
    -              		 -                                  		       21	       18
    CONSTANT       		 1                                  		       21	       19
    ;              		 ;                                  		       21	       20
    IDENTIFIER     		 lchild                             		       22	        5
    PTR_OP         		 ->                                 		       22	       11
    IDENTIFIER     		 right                              		       22	       13
    =              		 =                                  		       22	       19
    IDENTIFIER     		 NULL                               		       22	       21
    ;              		 ;                                  		       22	       25
    IDENTIFIER     		 lchild                             		       23	        5
    PTR_OP         		 ->                                 		       23	       11
    IDENTIFIER     		 left                               		       23	       13
    =              		 =                                  		       23	       18
    IDENTIFIER     		 NULL                               		       23	       20
    ;              		 ;                                  		       23	       24
    IDENTIFIER     		 rchild                             		       24	        5
    PTR_OP         		 ->                                 		       24	       11
    IDENTIFIER     		 left                               		       24	       13
    =              		 =                                  		       24	       18
    IDENTIFIER     		 NULL                               		       24	       20
    ;              		 ;                                  		       24	       24
    IDENTIFIER     		 rchild                             		       25	        5
    PTR_OP         		 ->                                 		       25	       11
    IDENTIFIER     		 right                              		       25	       13
    =              		 =                                  		       25	       19
    IDENTIFIER     		 NULL                               		       25	       21
    ;              		 ;                                  		       25	       25
    IDENTIFIER     		 root                               		       26	        5
    PTR_OP         		 ->                                 		       26	        9
    IDENTIFIER     		 left                               		       26	       11
    =              		 =                                  		       26	       16
    IDENTIFIER     		 lchild                             		       26	       18
    ;              		 ;                                  		       26	       24
    IDENTIFIER     		 root                               		       27	        5
    PTR_OP         		 ->                                 		       27	        9
    IDENTIFIER     		 right                              		       27	       11
    =              		 =                                  		       27	       17
    IDENTIFIER     		 rchild                             		       27	       19
    ;              		 ;                                  		       27	       25
    INT            		 int                                		       29	        5
    IDENTIFIER     		 n                                  		       29	        9
    =              		 =                                  		       29	       11
    CONSTANT       		 0                                  		       29	       13
    ;              		 ;                                  		       29	       14
    IDENTIFIER     		 scanf                              		       30	        5
    (              		 (                                  		       30	       10
    STRING_LITERAL 		 "%d"                               		       30	       11
    ,              		 ,                                  		       30	       15
    &              		 &                                  		       30	       16
    IDENTIFIER     		 n                                  		       30	       17
    )              		 )                                  		       30	       18
    ;              		 ;                                  		       30	       19
    CHAR           		 char                               		       31	        5
    IDENTIFIER     		 a                                  		       31	       10
    [              		 [                                  		       31	       11
    IDENTIFIER     		 n                                  		       31	       12
    ]              		 ]                                  		       31	       13
    ;              		 ;                                  		       31	       14
    INT            		 int                                		       32	        5
    IDENTIFIER     		 step                               		       32	        9
    =              		 =                                  		       32	       14
    CONSTANT       		 5                                  		       32	       16
    ;              		 ;                                  		       32	       17
    WHILE          		 while                              		       33	        5
    (              		 (                                  		       33	       10
    IDENTIFIER     		 n                                  		       33	       11
    >              		 >                                  		       33	       13
    CONSTANT       		 0                                  		       33	       15
    )              		 )                                  		       33	       16
    {              		 {                                  		       33	       17
    FOR            		 for                                		       34	        9
    (              		 (                                  		       34	       12
    INT            		 int                                		       34	       13
    IDENTIFIER     		 i                                  		       34	       17
    =              		 =                                  		       34	       19
    CONSTANT       		 0                                  		       34	       21
    ;              		 ;                                  		       34	       23
    IDENTIFIER     		 i                                  		       34	       25
    <              		 <                                  		       34	       27
    IDENTIFIER     		 n                                  		       34	       29
    ;              		 ;                                  		       34	       31
    IDENTIFIER     		 i                                  		       34	       32
    ADD_ASSIGN     		 +=                                 		       34	       34
    IDENTIFIER     		 step                               		       34	       37
    )              		 )                                  		       34	       41
    {              		 {                                  		       34	       42
    IDENTIFIER     		 a                                  		       35	       13
    [              		 [                                  		       35	       14
    IDENTIFIER     		 i                                  		       35	       15
    ]              		 ]                                  		       35	       16
    =              		 =                                  		       35	       18
    (              		 (                                  		       35	       20
    INT            		 int                                		       35	       21
    )              		 )                                  		       35	       24
    CONSTANT       		 'a'                                		       35	       25
    +              		 +                                  		       35	       28
    (              		 (                                  		       35	       29
    (              		 (                                  		       35	       30
    (              		 (                                  		       35	       31
    INT            		 int                                		       35	       32
    )              		 )                                  		       35	       35
    IDENTIFIER     		 a                                  		       35	       36
    [              		 [                                  		       35	       37
    IDENTIFIER     		 i                                  		       35	       38
    ]              		 ]                                  		       35	       39
    +              		 +                                  		       35	       41
    IDENTIFIER     		 i                                  		       35	       43
    -              		 -                                  		       35	       45
    (              		 (                                  		       35	       47
    INT            		 int                                		       35	       48
    )              		 )                                  		       35	       51
    CONSTANT       		 'a'                                		       35	       52
    )              		 )                                  		       35	       55
    %              		 %                                  		       35	       57
    CONSTANT       		 26                                 		       35	       59
    )              		 )                                  		       35	       61
    ;              		 ;                                  		       35	       62
    }              		 }                                  		       36	        9
    IDENTIFIER     		 n                                  		       37	        9
    SUB_ASSIGN     		 -=                                 		       37	       10
    CONSTANT       		 10                                 		       37	       12
    ;              		 ;                                  		       37	       14
    }              		 }                                  		       38	        5
    INT            		 int                                		       40	        5
    IDENTIFIER     		 x                                  		       40	        9
    =              		 =                                  		       40	       11
    CONSTANT       		 9                                  		       40	       13
    ;              		 ;                                  		       40	       14
    INT            		 int                                		       41	        5
    IDENTIFIER     		 y                                  		       41	        9
    =              		 =                                  		       41	       11
    IDENTIFIER     		 sqrt                               		       41	       13
    (              		 (                                  		       41	       17
    CONSTANT       		 9                                  		       41	       18
    )              		 )                                  		       41	       19
    ;              		 ;                                  		       41	       20
    CHAR           		 char                               		       43	        5
    IDENTIFIER     		 s1                                 		       43	       10
    [              		 [                                  		       43	       12
    ]              		 ]                                  		       43	       13
    =              		 =                                  		       43	       15
    STRING_LITERAL 		 "coda"                             		       43	       17
    ;              		 ;                                  		       43	       23
    CHAR           		 char                               		       44	        5
    IDENTIFIER     		 s2                                 		       44	       10
    [              		 [                                  		       44	       12
    ]              		 ]                                  		       44	       13
    =              		 =                                  		       44	       15
    STRING_LITERAL 		 "gami"                             		       44	       17
    ;              		 ;                                  		       44	       23
    CHAR           		 char                               		       45	        5
    IDENTIFIER     		 s3                                 		       45	       10
    [              		 [                                  		       45	       12
    ]              		 ]                                  		       45	       13
    =              		 =                                  		       45	       15
    IDENTIFIER     		 strcat                             		       45	       17
    (              		 (                                  		       45	       23
    IDENTIFIER     		 s1                                 		       45	       24
    ,              		 ,                                  		       45	       26
    IDENTIFIER     		 s2                                 		       45	       27
    )              		 )                                  		       45	       29
    ;              		 ;                                  		       45	       30
    IF             		 if                                 		       46	        5
    (              		 (                                  		       46	        7
    IDENTIFIER     		 s3                                 		       46	        8
    [              		 [                                  		       46	       10
    CONSTANT       		 1                                  		       46	       11
    ]              		 ]                                  		       46	       12
    =              		 =                                  		       46	       14
    CONSTANT       		 'o'                                		       46	       16
    )              		 )                                  		       46	       19
    {              		 {                                  		       46	       20
    IDENTIFIER     		 printf                             		       47	        9
    (              		 (                                  		       47	       15
    STRING_LITERAL 		 "YES\n"                            		       47	       16
    )              		 )                                  		       47	       23
    ;              		 ;                                  		       47	       24
    }              		 }                                  		       48	        5
    ELSE           		 else                               		       48	        6
    {              		 {                                  		       48	       10
    IDENTIFIER     		 printf                             		       49	        9
    (              		 (                                  		       49	       15
    STRING_LITERAL 		 "NO"                               		       49	       16
    )              		 )                                  		       49	       20
    ;              		 ;                                  		       49	       21
    }              		 }                                  		       50	        5
    RETURN         		 return                             		       51	        5
    CONSTANT       		 0                                  		       51	       12
    ;              		 ;                                  		       51	       13
    }              		 }                                  		       53	        1
