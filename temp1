
test1.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
int main() {
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
    int h=5;
   8:	c7 45 f8 05 00 00 00 	movl   $0x5,-0x8(%rbp)
    int f = 3;
   f:	c7 45 fc 03 00 00 00 	movl   $0x3,-0x4(%rbp)
    if(f){
  16:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  1a:	74 09                	je     25 <main+0x25>
      h = 6;
  1c:	c7 45 f8 06 00 00 00 	movl   $0x6,-0x8(%rbp)
  23:	eb 07                	jmp    2c <main+0x2c>
    }
    else{
      h = 7;
  25:	c7 45 f8 07 00 00 00 	movl   $0x7,-0x8(%rbp)
  2c:	b8 00 00 00 00       	mov    $0x0,%eax
    }
  31:	5d                   	pop    %rbp
  32:	c3                   	retq   

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
int main() {
   0:	6e                   	outsb  %ds:(%rsi),(%dx)
   1:	00 00                	add    %al,(%rax)
   3:	00 04 00             	add    %al,(%rax,%rax,1)
   6:	00 00                	add    %al,(%rax)
			6: R_X86_64_32	.debug_abbrev
    int h=5;
   8:	00 00                	add    %al,(%rax)
   a:	08 01                	or     %al,(%rcx)
   c:	00 00                	add    %al,(%rax)
			c: R_X86_64_32	.debug_str
   e:	00 00                	add    %al,(%rax)
    int f = 3;
  10:	0c 00                	or     $0x0,%al
			11: R_X86_64_32	.debug_str+0x94
	...
			15: R_X86_64_32	.debug_str+0xa2
			19: R_X86_64_64	.text
      h = 6;
  1e:	00 00                	add    %al,(%rax)
  20:	00 33                	add    %dh,(%rbx)
	...
			29: R_X86_64_32	.debug_line
      h = 7;
  2a:	00 00                	add    %al,(%rax)
  2c:	00 02                	add    %al,(%rdx)
  2e:	00 00                	add    %al,(%rax)
			2e: R_X86_64_32	.debug_str+0xcd
  30:	00 00                	add    %al,(%rax)
  32:	01 01                	add    %eax,(%rcx)
  34:	05 6a 00 00 00       	add    $0x6a,%eax
	...
			39: R_X86_64_64	.text
  41:	33 00                	xor    (%rax),%eax
  43:	00 00                	add    %al,(%rax)
  45:	00 00                	add    %al,(%rax)
  47:	00 00                	add    %al,(%rax)
  49:	01 9c 6a 00 00 00 03 	add    %ebx,0x3000000(%rdx,%rbp,2)
  50:	68 00 01 02 09       	pushq  $0x9020100
  55:	6a 00                	pushq  $0x0
  57:	00 00                	add    %al,(%rax)
  59:	02 91 68 03 66 00    	add    0x660368(%rcx),%dl
  5f:	01 03                	add    %eax,(%rbx)
  61:	09 6a 00             	or     %ebp,0x0(%rdx)
  64:	00 00                	add    %al,(%rax)
  66:	02 91 6c 00 04 04    	add    0x404006c(%rcx),%dl
  6c:	05 69 6e 74 00       	add    $0x746e69,%eax
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
int main() {
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1316 <main+0x30b1316>
    int h=5;
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	11 01                	adc    %eax,(%rcx)
   d:	12 07                	adc    (%rdi),%al
    int f = 3;
   f:	10 17                	adc    %dl,(%rdi)
  11:	00 00                	add    %al,(%rax)
  13:	02 2e                	add    (%rsi),%ch
  15:	01 3f                	add    %edi,(%rdi)
    if(f){
  17:	19 03                	sbb    %eax,(%rbx)
  19:	0e                   	(bad)  
  1a:	3a 0b                	cmp    (%rbx),%cl
      h = 6;
  1c:	3b 0b                	cmp    (%rbx),%ecx
  1e:	39 0b                	cmp    %ecx,(%rbx)
  20:	49 13 11             	adc    (%r9),%rdx
  23:	01 12                	add    %edx,(%rdx)
      h = 7;
  25:	07                   	(bad)  
  26:	40 18 97 42 19 01 13 	sbb    %dl,0x13011942(%rdi)
  2d:	00 00                	add    %al,(%rax)
  2f:	03 34 00             	add    (%rax,%rax,1),%esi
  32:	03 08                	add    (%rax),%ecx
  34:	3a 0b                	cmp    (%rbx),%cl
  36:	3b 0b                	cmp    (%rbx),%ecx
  38:	39 0b                	cmp    %ecx,(%rbx)
  3a:	49 13 02             	adc    (%r10),%rax
  3d:	18 00                	sbb    %al,(%rax)
  3f:	00 04 24             	add    %al,(%rsp)
  42:	00 0b                	add    %cl,(%rbx)
  44:	0b 3e                	or     (%rsi),%edi
  46:	0b 03                	or     (%rbx),%eax
  48:	08 00                	or     %al,(%rax)
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
int main() {
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
			6: R_X86_64_32	.debug_info
    int h=5;
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
	...
			10: R_X86_64_64	.text
    if(f){
  18:	33 00                	xor    (%rax),%eax
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
int main() {
   0:	4b 00 00             	rex.WXB add %al,(%r8)
   3:	00 03                	add    %al,(%rbx)
   5:	00 24 00             	add    %ah,(%rax,%rax,1)
    int h=5;
   8:	00 00                	add    %al,(%rax)
   a:	01 01                	add    %eax,(%rcx)
   c:	fb                   	sti    
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
    int f = 3;
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
    if(f){
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	74 65                	je     82 <main+0x82>
      h = 6;
  1d:	73 74                	jae    93 <main+0x93>
  1f:	73 00                	jae    21 <.debug_line+0x21>
  21:	00 74 65 73          	add    %dh,0x73(%rbp,%riz,2)
      h = 7;
  25:	74 31                	je     58 <main+0x58>
  27:	2e 63 00             	movslq %cs:(%rax),%eax
  2a:	01 00                	add    %eax,(%rax)
  2c:	00 00                	add    %al,(%rax)
  2e:	05 0c 00 09 02       	add    $0x209000c,%eax
	...
			33: R_X86_64_64	.text
  3b:	01 05 09 83 75 05    	add    %eax,0x5758309(%rip)        # 575834a <main+0x575834a>
  41:	07                   	(bad)  
  42:	75 05                	jne    49 <.debug_line+0x49>
  44:	09 67 93             	or     %esp,-0x6d(%rdi)
  47:	05 01 bc 02 02       	add    $0x202bc01,%eax
  4c:	00 01                	add    %al,(%rcx)
  4e:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
int main() {
   0:	47                   	rex.RXB
   1:	4e 55                	rex.WRX push %rbp
   3:	20 43 31             	and    %al,0x31(%rbx)
   6:	37                   	(bad)  
   7:	20 39                	and    %bh,(%rcx)
    int h=5;
   9:	2e 33 2e             	xor    %cs:(%rsi),%ebp
   c:	30 20                	xor    %ah,(%rax)
   e:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
    int f = 3;
  13:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
    if(f){
  19:	72 69                	jb     84 <.debug_str+0x84>
  1b:	63 20                	movslq (%rax),%esp
      h = 6;
  1d:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  22:	68 3d 78 38 36       	pushq  $0x3638783d
      h = 7;
  27:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
  2c:	67 20 2d 4f 30 20 2d 	and    %ch,0x2d20304f(%eip)        # 2d203082 <main+0x2d203082>
  33:	66 6e                	data16 outsb %ds:(%rsi),(%dx)
  35:	6f                   	outsl  %ds:(%rsi),(%dx)
  36:	2d 61 73 79 6e       	sub    $0x6e797361,%eax
  3b:	63 68 72             	movslq 0x72(%rax),%ebp
  3e:	6f                   	outsl  %ds:(%rsi),(%dx)
  3f:	6e                   	outsb  %ds:(%rsi),(%dx)
  40:	6f                   	outsl  %ds:(%rsi),(%dx)
  41:	75 73                	jne    b6 <.debug_str+0xb6>
  43:	2d 75 6e 77 69       	sub    $0x69776e75,%eax
  48:	6e                   	outsb  %ds:(%rsi),(%dx)
  49:	64 2d 74 61 62 6c    	fs sub $0x6c626174,%eax
  4f:	65 73 20             	gs jae 72 <.debug_str+0x72>
  52:	2d 66 73 74 61       	sub    $0x61747366,%eax
  57:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
  5a:	70 72                	jo     ce <.debug_str+0xce>
  5c:	6f                   	outsl  %ds:(%rsi),(%dx)
  5d:	74 65                	je     c4 <.debug_str+0xc4>
  5f:	63 74 6f 72          	movslq 0x72(%rdi,%rbp,2),%esi
  63:	2d 73 74 72 6f       	sub    $0x6f727473,%eax
  68:	6e                   	outsb  %ds:(%rsi),(%dx)
  69:	67 20 2d 66 73 74 61 	and    %ch,0x61747366(%eip)        # 617473d6 <main+0x617473d6>
  70:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
  73:	63 6c 61 73          	movslq 0x73(%rcx,%riz,2),%ebp
  77:	68 2d 70 72 6f       	pushq  $0x6f72702d
  7c:	74 65                	je     e3 <main+0xe3>
  7e:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
  82:	6e                   	outsb  %ds:(%rsi),(%dx)
  83:	20 2d 66 63 66 2d    	and    %ch,0x2d666366(%rip)        # 2d6663ef <main+0x2d6663ef>
  89:	70 72                	jo     fd <main+0xfd>
  8b:	6f                   	outsl  %ds:(%rsi),(%dx)
  8c:	74 65                	je     f3 <main+0xf3>
  8e:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
  92:	6e                   	outsb  %ds:(%rsi),(%dx)
  93:	00 74 65 73          	add    %dh,0x73(%rbp,%riz,2)
  97:	74 73                	je     10c <main+0x10c>
  99:	2f                   	(bad)  
  9a:	74 65                	je     101 <main+0x101>
  9c:	73 74                	jae    112 <main+0x112>
  9e:	31 2e                	xor    %ebp,(%rsi)
  a0:	63 00                	movslq (%rax),%eax
  a2:	2f                   	(bad)  
  a3:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
  a8:	73 61                	jae    10b <main+0x10b>
  aa:	6b 73 68 69          	imul   $0x69,0x68(%rbx),%esi
  ae:	2f                   	(bad)  
  af:	70 72                	jo     123 <main+0x123>
  b1:	6f                   	outsl  %ds:(%rsi),(%dx)
  b2:	6a 65                	pushq  $0x65
  b4:	63 74 2d 33          	movslq 0x33(%rbp,%rbp,1),%esi
  b8:	33 35 2f 63 6f 64    	xor    0x646f632f(%rip),%esi        # 646f63ed <main+0x646f63ed>
  be:	61                   	(bad)  
  bf:	67 61                	addr32 (bad) 
  c1:	6d                   	insl   (%dx),%es:(%rdi)
  c2:	69 5f 63 6f 6d 70 69 	imul   $0x69706d6f,0x63(%rdi),%ebx
  c9:	6c                   	insb   (%dx),%es:(%rdi)
  ca:	65 72 00             	gs jb  cd <.debug_str+0xcd>
  cd:	6d                   	insl   (%dx),%es:(%rdi)
  ce:	61                   	(bad)  
  cf:	69                   	.byte 0x69
  d0:	6e                   	outsb  %ds:(%rsi),(%dx)
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
int main() {
   0:	00 47 43             	add    %al,0x43(%rdi)
   3:	43 3a 20             	rex.XB cmp (%r8),%spl
   6:	28 55 62             	sub    %dl,0x62(%rbp)
    int h=5;
   9:	75 6e                	jne    79 <main+0x79>
   b:	74 75                	je     82 <main+0x82>
   d:	20 39                	and    %bh,(%rcx)
    int f = 3;
   f:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  12:	30 2d 31 37 75 62    	xor    %ch,0x62753731(%rip)        # 62753749 <main+0x62753749>
    if(f){
  18:	75 6e                	jne    88 <main+0x88>
  1a:	74 75                	je     91 <main+0x91>
      h = 6;
  1c:	31 7e 32             	xor    %edi,0x32(%rsi)
  1f:	30 2e                	xor    %ch,(%rsi)
  21:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  24:	20 39                	and    %bh,(%rcx)
      h = 7;
  26:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  29:	30 00                	xor    %al,(%rax)

Disassembly of section .note.gnu.property:

0000000000000000 <.note.gnu.property>:
   0:	04 00                	add    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	10 00                	adc    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	05 00 00 00 47       	add    $0x47000000,%eax
   d:	4e 55                	rex.WRX push %rbp
   f:	00 02                	add    %al,(%rdx)
  11:	00 00                	add    %al,(%rax)
  13:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
  17:	00 03                	add    %al,(%rbx)
  19:	00 00                	add    %al,(%rax)
  1b:	00 00                	add    %al,(%rax)
  1d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_frame:

0000000000000000 <.debug_frame>:
int main() {
   0:	14 00                	adc    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	ff                   	(bad)  
   5:	ff                   	(bad)  
   6:	ff                   	(bad)  
   7:	ff 01                	incl   (%rcx)
    int h=5;
   9:	00 01                	add    %al,(%rcx)
   b:	78 10                	js     1d <.debug_frame+0x1d>
   d:	0c 07                	or     $0x7,%al
    int f = 3;
   f:	08 90 01 00 00 00    	or     %dl,0x1(%rax)
  15:	00 00                	add    %al,(%rax)
    if(f){
  17:	00 24 00             	add    %ah,(%rax,%rax,1)
	...
			1c: R_X86_64_32	.debug_frame
			20: R_X86_64_64	.text
      h = 7;
  26:	00 00                	add    %al,(%rax)
  28:	33 00                	xor    (%rax),%eax
  2a:	00 00                	add    %al,(%rax)
  2c:	00 00                	add    %al,(%rax)
  2e:	00 00                	add    %al,(%rax)
  30:	45 0e                	rex.RB (bad) 
  32:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  38:	6a 0c                	pushq  $0xc
  3a:	07                   	(bad)  
  3b:	08 00                	or     %al,(%rax)
  3d:	00 00                	add    %al,(%rax)
	...
